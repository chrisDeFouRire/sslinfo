{"name":"SSL Info","tagline":"","body":"[![NPM](https://nodei.co/npm/sslinfo.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/sslinfo/) \r\n\r\nSSL Info\r\n=========\r\n\r\nUtility library for determining which SSL/TLS versions and ciphers a server supports\r\n\r\n## Installation\r\n\r\n  **This module requires NodeJS 0.12.0 or higher. It will not work on older versions!**\r\n  \r\n  **You may need to install node-gyp first globally: `npm install -g node-gyp` (use `sudo` if needed)**\r\n\r\n  `npm install sslinfo --save`\r\n  \r\n  **Note**: This library requires an OpenSSL installation - the newer the better. \r\n\r\n## Usage\r\n\r\n### Get the server certificate, enabled SSL/TLS protocols, and supported ciphers.\r\n\r\n    var sslinfo = require('sslinfo');\r\n\r\n    sslinfo.getServerResults({host: \"www.google.com\", port: 443})\r\n        .done(function (results) {\r\n            console.log(results);\r\n        },\r\n        function (error) {\r\n            console.log(\"Error\", {error: error})\r\n        });\r\n        \r\nThe `getServerResults()` function returns a promise that should be resolved by implementing `done()`.\r\n        \r\nSample output:\r\n\r\n    {\r\n        \"host\": \"www.google.com\",\r\n        \"port\": 443,\r\n        \"cert\": {\r\n            ... certificate information ...\r\n        },\r\n        \"protocols\": [\r\n            {\r\n                \"protocol\": \"SSLv2_method\",\r\n                \"enabled\": false,\r\n                \"error\": \"The installed openssl library does not support \\\"SSLv2_method\\\"\"\r\n            },\r\n            {\r\n                \"protocol\": \"SSLv3_method\",\r\n                \"enabled\": true\r\n            },\r\n            {\r\n                \"protocol\": \"TLSv1_method\",\r\n                \"enabled\": true\r\n            },\r\n            {\r\n                \"protocol\": \"TLSv1_1_method\",\r\n                \"enabled\": true\r\n            },\r\n            {\r\n                \"protocol\": \"TLSv1_2_method\",\r\n                \"enabled\": true\r\n            }\r\n        ],\r\n        \"ciphers\": {\r\n            \"SSLv3_method\": {\r\n                ...\r\n            },\r\n            \"TLSv1_method\": {\r\n                \"enabled\": [\r\n                    ... enabled cipher list ...\r\n                ],\r\n                \"disabled\": [\r\n                    ... disabled cipher list ...\r\n                ],\r\n                \"unsupported\": [\r\n                    ... ciphers unsupported by the OpenSSL version ...\r\n                ]\r\n            },\r\n            \"TLSv1_1_method\": {\r\n                ...\r\n            },\r\n            \"TLSv1_2_method\": {\r\n                ...\r\n            }\r\n        }\r\n    }\r\n          \r\n          \r\n### Get information about the installed OpenSSL version\r\n    \r\n    var sslinfo = require('sslinfo');\r\n              \r\n    sslinfo.getOpenSSLCapabilities()\r\n        .done(function (results) {\r\n            console.log(results);\r\n        },\r\n        function (error) {\r\n            console.log(\"Error\", {error: error});\r\n        });\r\n        \r\nThe `getOpenSSLCapabilities()` function returns a promise that should be resolved by implementing `done()`.\r\n        \r\nSample output (from Mac OS X 10.10.3):\r\n\r\n    {\r\n        \"version\": \"OpenSSL 0.9.8zd 8 Jan 2015\",\r\n        \"protocols\": {\r\n            \"supported\": [\r\n                \"SSLv3_method\",\r\n                \"TLSv1_method\",\r\n                \"TLSv1_1_method\",\r\n                \"TLSv1_2_method\"\r\n            ],\r\n            \"unsupported\": [\r\n                \"SSLv2_method\"\r\n            ]\r\n        },\r\n        \"ciphers\": {\r\n            \"supported\": [\r\n                ... ciphers supported by this OpenSSL version ...\r\n            ],\r\n            \"unsupported\": [\r\n                ... ciphers supported by this tool, but not the installed OpenSSL version ...\r\n            ]\r\n        }\r\n    }\r\n    \r\n**Note:** The `unsupported` cipher list is not necessarily correct. I'm going to investigate how to make this information more useful.\r\n\r\n## Release History\r\n\r\n* 0.1.0 Initial release\r\n* 0.1.1 Project housekeeping. No code changes.\r\n* 0.1.2 Rework how cipher detection works. Use appropriate cipher lists for SSLv3 vs TLS1.0/1.1 vs TLS1.2\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}